@startuml apprunner_monthly_budget

left to right direction

!$AWS_DARK = false

!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v17.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/Groups/all.puml
!include AWSPuml/CloudFinancialManagement/Budgets.puml

!include AWSPuml/Compute/AppRunner.puml
!include AWSPuml/General/Email.puml
!include AWSPuml/General/all.puml


!$AWS_DARK = false

' Groups are rectangles with a custom style using stereotype - need to hide
hide stereotype
skinparam linetype ortho
skinparam rectangle {
    BackgroundColor AWS_BG_COLOR
    BorderColor transparent
    Shadowing false
}

AWSCloudGroup(aws_cloud, "AWS Cloud") {
    AWSAccountGroup(aws_account_production, "Production AWS Account") {
        Budgets(AppRunner_monthly_budget, "AppRunner Account Budget", "Monthly Budget for my Account"){
        }
        GenericGroup(AppRunner_group, "AppRunner Service Group") {
            AppRunner(AppRunner_service_1, "AppRunner service 1", "")
            AppRunner(AppRunner_service_2, "AppRunner service 2", "")
            AppRunner(AppRunner_service_3, "AppRunner service 3", "")
            AppRunner(AppRunner_service_4, "AppRunner service 4", "")
        }
        GenericGroup(actual_cost_notification_group, "Actual cost subscriber email addresses") {
            Email(actual_cost_email_1, "Actual cost email 1", "actual_1@my.team")
            Email(actual_cost_email_2, "Actual cost email 2", "actual_2@my.team")
        }
        GenericGroup(forecasted_cost_notification_group, "Forecasted cost subscriber email addresses") {
            Email(forecasted_cost_email_1, "Forecasted cost email 1", "forecasted_1@my.team")
            Email(forecasted_cost_email_2, "Forecasted cost email 2", "forecasted_2@my.team")
        }
    }
}

'Hidden connections'
aws_account_production -[hidden]up- AppRunner_monthly_budget
aws_account_production -[hidden]down- AppRunner_group
'Service cost filter'
AppRunner_group <-[$AWS_COLOR_ENDOR]---------- AppRunner_monthly_budget : cost filter by service
'Budget notifications'
AppRunner_monthly_budget -[dashed,$AWS_COLOR_ENDOR]----> actual_cost_notification_group : email if threshold is GREATER_THAN 90% of ACTUAL usage
AppRunner_monthly_budget -[dashed,$AWS_COLOR_ENDOR]----> forecasted_cost_notification_group : email if threshold is GREATER_THAN 100% of FORECASTED usage

@enduml
